@import "variables";

@mixin scrollable(){
    overflow: auto;
    -webkit-overflow-scrolling: touch;
}
@mixin flexbox() {
    display: -webkit-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}
@mixin flex-wrap($fw){
    @if $fw == nowrap{
        -webkit-box-lines: single;
        -moz-box-lines: single;
        -webkit-flex-wrap: nowrap;
        -ms-flex-wrap: none;
        -ms-flex-wrap: nowrap;
        flex-wrap: nowrap;
    }@else if $fw == wrap{
        -webkit-box-lines: multiple;
        -moz-box-lines: multiple;
        -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    }@else {
        -webkit-flex-wrap: $fw;
        -ms-flex-wrap: $fw;
        flex-wrap: $fw;
    }
}
@mixin flex-shrink($fs) {
    -webkit-flex-shrink: $fs;
    -ms-flex: 0 $fs auto;
    flex-shrink: $fs;
}
@mixin justify-content($jc){
    @if $jc == 'flex-start'{
        -webkit-box-pack: start;
        -ms-flex-pack: start;
        -webkit-justify-content: flex-start;
        justify-content: flex-start;
    }@else if $jc == 'flex-end'{
        -webkit-box-pack: end;
        -ms-flex-pack: end;
        -webkit-justify-content: flex-end;
        justify-content: flex-end;
    }@else if $jc == 'space-between'{
        -webkit-box-pack: justify;
        -ms-flex-pack: justify;
        -webkit-justify-content: space-between;
        justify-content: space-between;
    }@else{
        -webkit-box-pack: $jc;
        -ms-flex-pack: $jc;
        -webkit-justify-content: $jc;
        justify-content: $jc;
    }
}
@mixin align-items($ai){
    @if $ai == flex-start{
        -webkit-box-align: start;
        -ms-flex-align: start;
        -webkit-align-items: flex-start;
        align-items: flex-start;
    }@else if $ai == flex-end{
        -webkit-box-align: end;
        -ms-flex-align: end;
        -webkit-align-items: flex-end;
        align-items: flex-end;
    }@else{
        -webkit-box-align: $ai;
        -ms-flex-align: $ai;
        -webkit-align-items: $ai;
        align-items: $ai;
    }
}
@mixin align-content($ai) {
    -ms-flex-line-pack: $ai;
    -webkit-align-content: $ai;
    align-content: $ai;
}
@mixin align-self($as) {
    -ms-flex-item-align: $as;
    -webkit-align-self: $as;
    align-self: $as;
}
@mixin clearfix() {
    &:before,
    &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}
@mixin hairline($position, $color,$offset:0){
    @if $position == top {
        &:before {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            bottom: auto;
            right: auto;
            height: 1px;
            width: 100%;
            background-color: $color;
            display: block;
            z-index: 15;
            transform-origin: 50% 0%;
            @media only screen and (-webkit-min-device-pixel-ratio: 2) {
              transform: scaleY(0.5);
            }
            @media only screen and (-webkit-min-device-pixel-ratio: 3) {
                transform: scaleY(0.33);
            }
        }
    }@else if $position == left {
        &:before {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            bottom: auto;
            right: auto;
            width: 1px;
            height: 100%;
            background-color: $color;
            display: block;
            z-index: 15;
            transform-origin: 0% 50%;
            @media only screen and (-webkit-min-device-pixel-ratio: 2) {
                transform: scaleY(0.5);
            }
            @media only screen and (-webkit-min-device-pixel-ratio: 3) {
                transform: scaleY(0.33);
            }
        }
    }@else if $position == bottom {
        &:after {
            content: '';
            position: absolute;
            left: 0;
            bottom: 0;
            right: auto;
            top: auto;
            height: 1px;
            width: 100%;
            background-color: $color;
            display: block;
            z-index: 15;
            transform-origin: 50% 100%;
            @media only screen and (-webkit-min-device-pixel-ratio: 2) {
                transform: scaleY(0.5);
            }
            @media only screen and (-webkit-min-device-pixel-ratio: 3) {
                transform: scaleY(0.33);
            }
        }
    }@else if $position == right {
        &:after {
            content: '';
            position: absolute;
            right: 0;
            top: 0;
            left: auto;
            bottom: auto;
            width: 1px;
            height: 100%;
            background-color: $color;
            display: block;
            z-index: 15;
            transform-origin: 100% 50%;
            @media only screen and (-webkit-min-device-pixel-ratio: 2) {
                transform: scaleY(0.5);
            }
            @media only screen and (-webkit-min-device-pixel-ratio: 3) {
                transform: scaleY(0.33);
            }
        }
    }@else if $position == single{
        background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100%' height='1'><rect fill='#{$color}' x='0' y='0' width='100%' height='0.5'/></svg>");
        background-position: $offset 100%;
    }@else if $position == double{
        background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100%' height='1'><rect fill='#{$color}' x='0' y='0' width='100%' height='0.5'/></svg>"),
                      url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100%' height='1'><rect fill='#{$color}' x='0' y='0' width='100%' height='0.5'/></svg>");
        background-position: $offset 100%, $offset 0;
        background-repeat: no-repeat;
    }
}
// For right and bottom
@mixin hairline-remove($position){
    @if $position != left and $position != top {
        &:after {
            display: none;
        }
    }@else if $position != right and $position != bottom{
        &:before {
            display: none;
        }
    }
}

// For right and bottom
@mixin hairline-color($position, $color){
    @if $position != left and $position = top{
        &:after {
            background-color: $color;
        }
    }@else if $position != right and $position != bottom{
        &:before {
            background-color: $color;
        }
    }
}

// Encoded SVG Background
@mixin encoded-svg-background($svg) {
    $url: '#{$svg}';
    background-image: url("data:image/svg+xml;charset=utf-8,#{$url}");
}

// Preserve3D
@mixin preserve3d() {
    -webkit-transform-style: preserve-3d;
    -moz-transform-style: preserve-3d;
    -ms-transform-style: preserve-3d;
    transform-style: preserve-3d;
}

//from ratchet
@mixin linear-gradient($color-from, $color-to) {
  background-color: $color-from; // Old browsers
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$color-from), color-stop(100%,$color-to)); // Chrome, Safari4+
  background-image: -webkit-linear-gradient(top, $color-from 0%, $color-to 100%);           // Chrome10+, Safari5.1+
  background-image:    -moz-linear-gradient(top, $color-from 0%, $color-to 100%);           // FF3.6+
  background-image:     -ms-linear-gradient(top, $color-from 0%, $color-to 100%);           // IE10+
  background-image:      -o-linear-gradient(top, $color-from 0%, $color-to 100%);           // Opera 11.10+
  background-image:         linear-gradient(to bottom, $color-from 0%, $color-to 100%);     // W3C
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$color-from}', endColorstr='#{$color-to}', GradientType=0 ); // IE6-9
}
@mixin directional-gradient($color-from, $color-to, $deg: 45deg) {
  background-color: $color-from; // Old browsers
  background-image: -webkit-gradient(linear, left bottom, right top, color-stop(0%,$color-from), color-stop(100%,$color-to)); // Chrome, Safari4+
  background-image: -webkit-linear-gradient($deg, $color-from 0%, $color-to 100%);           // Chrome10+, Safari5.1+
  background-image:    -moz-linear-gradient($deg, $color-from 0%, $color-to 100%);           // FF3.6+
  background-image:     -ms-linear-gradient($deg, $color-from 0%, $color-to 100%);           // IE10+
  background-image:      -o-linear-gradient($deg, $color-from 0%, $color-to 100%);           // Opera 11.10+
  background-image:         linear-gradient($deg, $color-from 0%, $color-to 100%);     // W3C
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$color-from}', endColorstr='#{$color-to}', GradientType=1 ); // IE6-9
}

@mixin label-variant($color) {
  background-color: $color;

  &[href] {
    &:hover,
    &:focus {
      background-color: darken($color, 10%);
    }
  }
}


//已删除的mixin
/*.transition($d) {
    -webkit-transition-duration: $d;
    transition-duration: $d;
}
.delay($d) {
    -webkit-transition-delay: $d;
    transition-delay: $d;
}
.transform($t) {
    -webkit-transform: $t;
    transform: $t;
}
.transform-origin($to) {
    -webkit-transform-origin: $to;
    transform-origin: $to;
}
.translate3d($x:0, $y:0, $z:0) {
    -webkit-transform: translate3d($x,$y,$z);
    transform: translate3d($x,$y,$z);
}
.animation($a) {
    -webkit-animation: $a;
    animation: $a;
}
.border-box(){
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}
.box-shadow($bs) {
    -webkit-box-shadow: $bs;
    box-shadow: $bs;
}
.animation-name($name) {
  -webkit-animation-name: $name;
     -moz-animation-name: $name;
          animation-name: $name;
}
.animation-duration($duration) {
  -webkit-animation-duration: $duration;
     -moz-animation-duration: $duration;
          animation-duration: $duration;
}
.animation-direction($direction) {
  -webkit-animation-direction: $direction;
     -moz-animation-direction: $direction;
          animation-direction: $direction;
}
*/
